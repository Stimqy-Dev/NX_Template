{
  "manifest": {
    "name": "discord-api-types",
    "version": "0.38.12",
    "description": "Discord API typings that are kept up to date for use in bot library creation.",
    "homepage": "https://discord-api-types.dev/",
    "workspaces": [
      "scripts/actions/documentation"
    ],
    "exports": {
      "./globals": {
        "types": "./globals.d.ts",
        "require": "./globals.js",
        "import": "./globals.mjs"
      },
      "./v6": {
        "types": "./v6.d.ts",
        "require": "./v6.js",
        "import": "./v6.mjs"
      },
      "./v8": {
        "types": "./v8.d.ts",
        "require": "./v8.js",
        "import": "./v8.mjs"
      },
      "./v9": {
        "types": "./v9.d.ts",
        "require": "./v9.js",
        "import": "./v9.mjs"
      },
      "./v10": {
        "types": "./v10.d.ts",
        "require": "./v10.js",
        "import": "./v10.mjs"
      },
      "./gateway": {
        "types": "./gateway/index.d.ts",
        "require": "./gateway/index.js",
        "import": "./gateway/index.mjs"
      },
      "./gateway/v*": {
        "types": "./gateway/v*.d.ts",
        "require": "./gateway/v*.js",
        "import": "./gateway/v*.mjs"
      },
      "./payloads": {
        "types": "./payloads/index.d.ts",
        "require": "./payloads/index.js",
        "import": "./payloads/index.mjs"
      },
      "./payloads/v*": {
        "types": "./payloads/v*/index.d.ts",
        "require": "./payloads/v*/index.js",
        "import": "./payloads/v*/index.mjs"
      },
      "./rest": {
        "types": "./rest/index.d.ts",
        "require": "./rest/index.js",
        "import": "./rest/index.mjs"
      },
      "./rest/v*": {
        "types": "./rest/v*/index.d.ts",
        "require": "./rest/v*/index.js",
        "import": "./rest/v*/index.mjs"
      },
      "./rpc": {
        "types": "./rpc/index.d.ts",
        "require": "./rpc/index.js",
        "import": "./rpc/index.mjs"
      },
      "./rpc/v*": {
        "types": "./rpc/v*.d.ts",
        "require": "./rpc/v*.js",
        "import": "./rpc/v*.mjs"
      },
      "./voice": {
        "types": "./voice/index.d.ts",
        "require": "./voice/index.js",
        "import": "./voice/index.mjs"
      },
      "./voice/v*": {
        "types": "./voice/v*.d.ts",
        "require": "./voice/v*.js",
        "import": "./voice/v*.mjs"
      },
      "./utils": {
        "types": "./utils/index.d.ts",
        "require": "./utils/index.js",
        "import": "./utils/index.mjs"
      },
      "./utils/v*": {
        "types": "./utils/v*.d.ts",
        "require": "./utils/v*.js",
        "import": "./utils/v*.mjs"
      }
    },
    "scripts": {
      "build:ci": "tsc --noEmit --incremental false",
      "build:deno": "node ./scripts/deno.mjs",
      "build:node": "tsc && run-p 'esm:*'",
      "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s",
      "ci:pr": "run-s changelog lint build:deno && node ./scripts/bump-website-version.mjs",
      "clean:deno": "rimraf deno/",
      "clean:node": "rimraf --glob \"{gateway,payloads,rest,rpc,voice,utils}/**/*.{js,mjs,d.ts,*map}\" \"{globals,v*}.{js,mjs,d.ts,*map}\"",
      "clean": "run-p 'clean:*'",
      "esm:gateway": "gen-esm-wrapper ./gateway/index.js ./gateway/index.mjs",
      "esm:globals": "gen-esm-wrapper ./globals.js ./globals.mjs",
      "esm:payloads": "gen-esm-wrapper ./payloads/index.js ./payloads/index.mjs",
      "esm:rest": "gen-esm-wrapper ./rest/index.js ./rest/index.mjs",
      "esm:rpc": "gen-esm-wrapper ./rpc/index.js ./rpc/index.mjs",
      "esm:utils": "gen-esm-wrapper ./utils/index.js ./utils/index.mjs",
      "esm:versions": "node ./scripts/versions.mjs",
      "esm:voice": "gen-esm-wrapper ./voice/index.js ./voice/index.mjs",
      "lint": "prettier --write . && eslint --format=pretty --fix --ext mjs,ts \"{gateway,payloads,rest,rpc,voice,utils}/**/*.ts\" \"{globals,v*}.ts\" \"scripts/**/*.mjs\"",
      "postinstallDev": "is-ci || husky",
      "prepack": "run-s clean test:lint build:node",
      "postpack": "run-s clean:node build:deno",
      "test:lint": "prettier --check . && eslint --format=pretty --ext mjs,ts \"{gateway,payloads,rest,rpc,voice,utils}/**/*.ts\" \"{globals,v*}.ts\" \"scripts/**/*.mjs\"",
      "test:types": "tsc -p tests"
    },
    "keywords": [
      "discord",
      "discord api",
      "types",
      "discordjs"
    ],
    "author": {
      "name": "Vlad Frangu",
      "email": "me@vladfrangu.dev"
    },
    "license": "MIT",
    "files": [
      "{gateway,payloads,rest,rpc,voice,utils}/**/*.{js,js.map,d.ts,d.ts.map,mjs}",
      "{globals,v*}.{js,js.map,d.ts,d.ts.map,mjs}"
    ],
    "devDependencies": {
      "@commitlint/cli": "^19.8.1",
      "@commitlint/config-angular": "^19.8.1",
      "@favware/npm-deprecate": "^2.0.0",
      "@octokit/action": "^8.0.2",
      "@octokit/webhooks-types": "^7.6.1",
      "@sapphire/prettier-config": "^2.0.0",
      "@types/lodash.merge": "^4",
      "@types/node": "^22.15.29",
      "@typescript-eslint/utils": "^8.33.0",
      "conventional-changelog": "^7.0.2",
      "conventional-changelog-angular": "^8.0.0",
      "conventional-recommended-bump": "^11.1.0",
      "eslint": "^9.28.0",
      "eslint-config-neon": "^0.2.7",
      "eslint-formatter-pretty": "^6.0.1",
      "eslint-import-resolver-typescript": "^4.4.2",
      "gen-esm-wrapper": "^1.1.3",
      "husky": "^9.1.7",
      "is-ci": "^4.1.0",
      "lint-staged": "^16.1.0",
      "lodash.merge": "^4.6.2",
      "npm-run-all2": "^8.0.4",
      "prettier": "^3.5.3",
      "pretty-quick": "^4.1.1",
      "rimraf": "^6.0.1",
      "tsutils": "^3.21.0",
      "tsx": "^4.19.4",
      "typescript": "^5.8.3",
      "typescript-eslint": "^8.33.0"
    },
    "publishConfig": {
      "provenance": true,
      "access": "public",
      "registry": "https://registry.npmjs.org"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/discordjs/discord-api-types"
    },
    "lint-staged": {
      "{gateway,payloads,rest,rpc,voice,utils}/**/*.{mjs,js,ts}": "eslint --fix --ext mjs,js,ts",
      "{globals,v*}.ts": "eslint --fix --ext mjs,js,ts"
    },
    "commitlint": {
      "extends": [
        "@commitlint/config-angular"
      ],
      "rules": {
        "type-enum": [
          2,
          "always",
          [
            "chore",
            "build",
            "ci",
            "docs",
            "feat",
            "fix",
            "perf",
            "refactor",
            "revert",
            "style",
            "test",
            "types",
            "wip"
          ]
        ],
        "scope-case": [
          1,
          "always",
          "pascal-case"
        ]
      }
    },
    "packageManager": "yarn@4.9.2",
    "volta": {
      "node": "24.1.0",
      "yarn": "4.9.2"
    },
    "_registry": "npm",
    "_loc": "C:\\Users\\onesh\\Desktop\\NX_DEV Template\\cache\\yarn-cache\\v6\\npm-discord-api-types-0.38.12-5b6e096b206a76f7f0203cdbe174233e610e48ed-integrity\\node_modules\\discord-api-types\\package.json",
    "readmeFilename": "README.md",
    "readme": "# Discord API Types\n\n[![discord-api-types](https://raw.githubusercontent.com/discordjs/discord-api-types/main/website/static/svgs/logo_long_blurple.svg)](https://github.com/discordjs/discord-api-types)\n\n[![GitHub](https://img.shields.io/github/license/discordjs/discord-api-types)](https://github.com/discordjs/discord-api-types/blob/main/LICENSE.md)\n[![npm](https://img.shields.io/npm/v/discord-api-types?color=crimson&logo=npm)](https://www.npmjs.com/package/discord-api-types)\n[![deno](https://img.shields.io/npm/v/discord-api-types?color=blue&label=deno&logo=deno)](https://deno.land/x/discord_api_types)\n[![Patreon Donate](https://img.shields.io/badge/patreon-donate-brightgreen.svg?label=Donate%20with%20Patreon&logo=patreon&colorB=F96854&link=https://www.patreon.com/vladfrangu)](https://www.patreon.com/vladfrangu)\n[![Ko-fi Donate](https://img.shields.io/badge/kofi-donate-brightgreen.svg?label=Donate%20with%20Ko-fi&logo=ko-fi&colorB=F16061&link=https://ko-fi.com/wolfgalvlad&logoColor=FFFFFF)](https://ko-fi.com/wolfgalvlad)\n[![GitHub Sponsors](https://img.shields.io/badge/patreon-donate-brightgreen.svg?label=Sponsor%20through%20GitHub&logo=github&colorB=F96854&link=https://github.com/sponsors/vladfrangu)](https://github.com/sponsors/vladfrangu)\n[![Powered by Vercel](https://raw.githubusercontent.com/discordjs/discord-api-types/main/website/static/powered-by-vercel.svg)](https://vercel.com?utm_source=discordjs&utm_campaign=oss)\n\nSimple type definitions for the [Discord API](https://discord.com/developers/docs/intro).\n\n## Installation\n\nInstall with [npm](https://www.npmjs.com/) / [yarn](https://yarnpkg.com) / [pnpm](https://pnpm.js.org/):\n\n```sh\nnpm install discord-api-types\nyarn add discord-api-types\npnpm add discord-api-types\n```\n\n### Usage\n\nYou can only import this module by specifying the API version you want to target. Append `/v*` to the import path, where the `*` represents the API version. Below are some examples\n\n```js\nconst { APIUser } = require('discord-api-types/v10');\n```\n\n```ts\n// TypeScript/ES Module support\nimport { APIUser } from 'discord-api-types/v10';\n```\n\nYou may also import just certain parts of the module that you need. The possible values are: `globals`, `gateway`, `gateway/v*`, `payloads`, `payloads/v*`, `rest`, `rest/v*`, `rpc`, `rpc/v*`, `utils`, `utils/v*`, `voice`, and `voice/v*`. Below are some examples\n\n```js\nconst { GatewayVersion } = require('discord-api-types/gateway/v10');\n```\n\n```ts\n// TypeScript/ES Module support\nimport { GatewayVersion } from 'discord-api-types/gateway/v10';\n```\n\n> _**Note:** The `v*` exports (`discord-api-types/v*`) include the appropriate version of `gateway`, `payloads`, `rest`, `rpc`, and `utils` you specified, alongside the `globals` exports_\n\n### Deno\n\nWe also provide typings compatible with the [deno](https://deno.land/) runtime. You have 3 ways you can import them:\n\n1. Directly from GitHub\n\n```ts\n// Importing a specific API version\nimport { APIUser } from 'https://raw.githubusercontent.com/discordjs/discord-api-types/main/deno/v10.ts';\n```\n\n2. From [deno.land/x](https://deno.land/x)\n\n```ts\n// Importing a specific API version\nimport { APIUser } from 'https://deno.land/x/discord_api_types/v10.ts';\n```\n\n3. From [skypack.dev](https://www.skypack.dev/)\n\n```ts\n// Importing a specific API version\nimport { APIUser } from 'https://cdn.skypack.dev/discord-api-types/v10?dts';\n```\n\n## Project Structure\n\nThe exports of each API version is split into three main parts:\n\n- Everything exported with the `API` prefix represents a payload you may get from the REST API _or_ the Gateway.\n\n- Everything exported with the `Gateway` prefix represents data that ONLY comes from or is directly related to the Gateway.\n\n- Everything exported with the `REST` prefix represents data that ONLY comes from or is directly related to the REST API.\n\n    - For endpoint options, they will follow the following structure: `REST<HTTP Method><Type><Query|(JSON|FormData)Body|Result>` where the type represents what it will return.\n\n        - For example, `RESTPostAPIChannelMessageJSONBody` or `RESTGetAPIGatewayBotInfoResult`.\n\n        - Some exported types (specifically OAuth2 related ones) may not respect this entire structure due to the nature of the fields. They will start with either `RESTOAuth2` or with something similar to `REST<HTTP Method>OAuth2`\n\n    - If a type ends with `Result`, then it represents the expected result by calling its accompanying route.\n\n        - Types that are exported as `never` usually mean the result will be a `204 No Content`, so you can safely ignore it. This does **not** account for errors.\n\n- Anything else that is miscellaneous will be exported based on what it represents (for example the `REST` route object).\n\n- There may be types exported that are identical for all versions. These will be exported as is and can be found in the `globals` file. They will still be prefixed accordingly as described above.\n\n**A note about how types are documented**: This package will add types only for known and documented properties that are present in Discord's [API Documentation repository](https://github.com/discord/discord-api-docs),\nthat are mentioned in an open pull request, or known through other means _and have received the green light to be used_.\nAnything else will not be documented (for example client only types).\n\nWith that aside, we may allow certain types that are not documented in the [API Documentation repository](https://github.com/discord/discord-api-docs) on a case by case basis.\nThey will be documented with an `@unstable` tag and are not subject with the same versioning rules.\n",
    "licenseText": "MIT License\n\nCopyright (c) 2020 vladfrangu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/discord-api-types/-/discord-api-types-0.38.12.tgz#5b6e096b206a76f7f0203cdbe174233e610e48ed",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/discord-api-types/-/discord-api-types-0.38.12.tgz",
    "hash": "5b6e096b206a76f7f0203cdbe174233e610e48ed",
    "integrity": "sha512-vqkRM50N5Zc6OVckAqtSslbUEoXmpN4bd9xq2jkoK9fgO3KNRIOyMMQ7ipqjwjKuAgzWvU6G8bRIcYWaUe1sCA==",
    "registry": "npm",
    "packageName": "discord-api-types",
    "cacheIntegrity": "sha512-vqkRM50N5Zc6OVckAqtSslbUEoXmpN4bd9xq2jkoK9fgO3KNRIOyMMQ7ipqjwjKuAgzWvU6G8bRIcYWaUe1sCA== sha1-W24JayBqdvfwIDzb4XQjPmEOSO0="
  },
  "registry": "npm",
  "hash": "5b6e096b206a76f7f0203cdbe174233e610e48ed"
}